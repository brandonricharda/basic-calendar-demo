{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleFormSubmit","e","preventDefault","bodyParams","JSON","stringify","state","createAppointment","title","duration","type","division","participants","datetime","handleInputChange","bind","event","target","value","name","id","includes","currentState","this","setState","console","log","userInput","fetch","method","headers","body","then","res","text","apiResponse","catch","err","className","onSubmit","onChange","class","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08653c16.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            title : \"\",\n            duration : \"\",\n            type : \"online\",\n            division : \"https://api.oncallhealth.ca/divisions/2404/\",\n            participants : [{\n                \"email\": \"\",\n                \"name\": \"\",\n                \"fee\": 0,\n                \"cancelled\": false\n            }],\n            datetime : \"\"\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        if (!target.id.includes(\"participant\")) {\n            this.setState({\n                [name] : value\n            });\n        } else {\n            const { participants } = { ...this.state };\n            const currentState = participants;\n            currentState[0][name] = value;\n            this.setState({\n                participants : currentState\n            });\n        }\n        console.log(this.state);\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const bodyParams = JSON.stringify(this.state);\n        this.createAppointment(bodyParams);\n    }\n\n    stringifyUserInput(userInput) {\n        userInput.preventDefault();\n        console.log(userInput);\n    }\n\n    createAppointment(bodyParams) {\n        fetch(\"https://warm-escarpment-84950.herokuapp.com/post-new-appointment\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: bodyParams\n        })\n        .then(res => res.text())\n        .then(res => this.setState({ apiResponse: res }))\n        .catch(err => err);\n    }\n\n    render() {\n        return (\n            <div>\n                <form className=\"flex column items-aligned-center\" onSubmit={this.handleFormSubmit}>\n                    <h2>Create a New OnCall Appointment</h2>\n                    <label className=\"flex column items-aligned-center\">\n                        <p className=\"mb-10\">Appointment Title:</p>\n                        <input\n                            name=\"title\"\n                            type=\"text\"\n                            className=\"width-350 height-20\"\n                            onChange={this.handleInputChange}\n                        />\n                    </label>\n\n                    <label className=\"flex column items-aligned-center\">\n                        <p className=\"mb-10\">Appointment Duration (Minutes):</p>\n                        <input\n                            name=\"duration\"\n                            type=\"number\"\n                            className=\"width-350 height-20\"\n                            onChange={this.handleInputChange}\n                        />\n                    </label>\n\n                    <label className=\"flex column items-aligned-center\">\n                        <p className=\"mb-10\">Your Name (Patient):</p>\n                        <input\n                            name=\"name\"\n                            type=\"text\"\n                            className=\"width-350 height-20\"\n                            id=\"participant-name-input\"\n                            onChange={this.handleInputChange}\n                        />\n                    </label>\n\n                    <label className=\"flex column items-aligned-center\">\n                        <p className=\"mb-10\">Your Email (Patient):</p>\n                        <input\n                            name=\"email\"\n                            type=\"text\"\n                            className=\"width-350 height-20\"\n                            id=\"participant-email-input\"\n                            onChange={this.handleInputChange}\n                        />\n                    </label>\n\n                    <label className=\"flex column items-aligned-center\">\n                        <p className=\"mb-10\">Appointment Type:</p>\n                        <select name=\"type\" className=\"width-350 height-20\" onChange={this.handleInputChange}>\n                            <option value=\"online\">Online</option>\n                            <option value=\"inperson\">In Person</option>\n                            <option value=\"phone\">Phone</option>\n                            <option value=\"message\">Message</option>\n                        </select>\n                    </label>\n\n                    <label className=\"flex column items-aligned-center\">\n                        <p className=\"mb-10 mt-10\">Appointment Date:</p>\n                        <input\n                            name=\"datetime\"\n                            type=\"datetime-local\"\n                            className=\"width-350 height-20 mb-10\"\n                            onChange={this.handleInputChange}\n                        />\n                    </label>\n\n                    <input type=\"submit\" value=\"Submit\" className=\"width-350 height-30 primary-blue borderless white-text cursor-pointer\"/>\n\n                    <div class=\"flex column width-350 items-aligned-center\">\n                        <h2>Response:</h2>\n                        <p>{this.state.apiResponse}</p>\n                    </div>\n\n                </form>\n\n            </div>\n        )\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}